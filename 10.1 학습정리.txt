1. 주석이란 무엇이며, 종류는?
주석은 코드에 영향을 미치지 않으며 컴파일 대상에서 제외된다. 즉 .java 파일에는 남아 있지만 .class 파일에는 없다. 
주석의 용도는 설명 추가, 지침 안내, 어떠한 기능을 잠시 사용하지 않을 때, 다른 개발자들과 협업 할 때 편리하기 위해서이다.
주석의 종류에는 2가지가 있다.
1) // : 줄 단위
2) /* */ : 블럭 단위


2.주석은 컴파일시 어떻게 되는가?
주석은 코드에 영향을 미치지 않으며 컴파일 대상에서 제외된다. 즉 .java 파일에는 남아 있지만 .class 파일에는 없다. 


3. 들여쓰기는 왜 해야 하는가?
다른 개발자가 그 소스 코드를 처음 보았을 때, 더 빠른 시간 안에 완벽하게 이해할 수 있도록 도와주며 소프트웨어의 가독성이 높아진다.


4. 변수란 무엇인가?
메모리 공간의 할당과 접근을 위해 필요한 도구로 프로그램에 의해 이름(변수명)을 할당받은 데이터를 저장 할 수 있는 메모리 공간을 의미한다.


5. 변수선언의 의미는?
메모리에 공간 할당을 하는 것으로 변수선언을 하면 데이터 타입(자료형)의 크기만큼 메모리 공간을 확보하여 변수명을 지정한다.


6. Java의 자료형 작성 (8형제) 에 대하여 설명하시오.
자료형에는 boolean, char, byte, short, int, long, float, double이 있다.
이 8가지 자료형은 크게 4가지로 나누어진다.
▷ 논리형 : boolean
크기는 1byte, 값은 true, false로 표현한다.

▷ 문자형 : char
크기는 2byte, 값은 유니코드 문자를 표현한다.

▷ 정수형 : byte, short, int, long
크기는 byte는 1byte, short는 2byte, int는 4byte, long은 8byte이며 정수값을 표현한다.
각 자료형은 표현할 수 있는 정수값의 범위가 정해져 있다.

▷ 실수형 : float, double
크기는 float는 4byte, double은 8byte로 실수값을 표현한다.
각 실수형은 표현할 수 있는 실수값의 범위가 정해져 있다.
7. int 형 범위는?
-2147483648 ~ 2147483647로 대략 -21억 ~ 21억으로 기억해 두면 편리하다. 


8. int num; 을 메모리 그리고 설명해보시오.
정수형 데이터타입(자료형)으로 4byte의 메모리 공간을 할당받는 변수명 num을 선언한다.
int num;은 정수형 타입의 변수명 num인 변수를 선언한다는 것으로 int 타입의 4byte만큼 이 변수를 위해 메모리 공간을 할당한다는 것이다. 즉, num 변수의 메모리 공간이 4byte만큼 확보된다는 것을 의미한다.


9. java 언어를 창시한 사람은?
제임스 아서 고슬링(James Arthur Gosling)


10. JDK란 무엇이며, 어디서 다운로드 받으며, OS별로 버전이 있는 까닭은?
Java Development Kit의 줄임말로 Java로 소프트웨어를 개발할 수 있도록 여러 기능들을 제공하는 패키지이다. JDK안에는 JVM, JRE가 포함되어 있다. 따라서 자바 소스코드를 프로그램이 실행되는 OS환경에 맞추어 컴파일을 하기 위해서 OS별로 버전이 따로 존재한다.


11. JVM 무엇의 약자이며,이란 무엇인가?
Java Virtual Machine의 약자로 자바 소스코드를 프로그램이 실행되는 OS환경에 맞추어 컴파일을 해주는 일을 한다.


12.아래에 대하여 설명하시오.
write once, run everywhere.
일반 프로그램은 program -> OS -> 하드웨어(CPU) 과정으로 실행되어
OS별로 따로 컴파일을 해줘야한다.
그렇지만 자바 프로그램은 program -> JVM -> operating system(OS) -> 하드웨어(CPU)  과정으로 실행되어 JVM이 OS에 맟춰 컴파일을 해준다. OS에 맟춰 JVM을 설치해두면 동일한 소스코드로 다른 OS에서도 사용할 수 있다.

기본적으로 각가의 운영체제는 다르게 설계되어 있어서 파일이 실행되는 방식이 완전히 다르기 때문에 응용 프로그램을 각각의 운영 체제에서 모두 실행시키기 위해서는 각각의 운영 체제에 맞게 따로따로 개발을 해야한다.(플랫폼 종속)
자바가 어느 운영체제에서도 실행될 수 있는 이유는 자바가 운영 체제에서 직접 실행되는 것이 아닌 JVM에서 구동되기 때문이다. (.exe파일을 OS에서 실행하는 것이 아닌 .java파일을 JVM에서 실행함)
JVM을 각각의 운영체제 별로(windows, macOS, Linux) 제공하고 있기 때문에 자바는 운영체제에 자유롭게 어디서든 사용이 가능한다는 것이 큰 장점이다.