1. 리터럴이란?


int num = 5; 를 예로 들면, 변수에 값을 직접 입력하는 값을 리터럴이라고 한다.
리터럴은 상수와 같은 의미이지만프로그램에서는 상수를 "값을 한번 저장하면 변경할수 없는 변수"로 정의하기 때문에
이와 구분하기 위해서 리터럴이라는 용어를 사용한다.

2. 아래의 내용이 에러가 나는 이유와 수정 방법은?

System.out.println(3147483647 + 3147483648); //에러남

+ 를 산술연산자로 간주하고 int의 값을 메모리에 만들었는데
3147483647 값이 int 4Byte의 값(21억)을 
초과 하기 때문에 에러가 발생함 수정방법은산술연산을 위해 메모리를 얻을때 long의 값임을 알려주도록
L을 붙여 3147483647L 와 같이 사용한다.

3. 자동 형변환과 명시적 형변환에 대하여 설명하시오.

연산시의 2개의 피연산자는 자료형이 일치해야 동일한 방법을 적용하여 
연산을 진행을 하는데,자동형변환은 연산식을 실행 하기 전에
서로다른 타입의 피연산자가 있다면,두 피연산자중 크기가 큰 타입으로에 자동 변환된 후 연산을 수행한다.

이때 자동형변환이 일어난다.

자동형변환은 작은크기를 가지는 타입이 큰 크기를 가지는 타입으로 변환된다.

특히, int 이하는 int로 자동형변환이 된다.

ex:
	byte -> short -> 
					           int -> long -> float -> double
			     char ->	
명시적 형변환은 (강제타입변환)
큰 크기의 타입은 작은 크기의 타입으로 자동타입변환이 되지는 않는데,
	예:
	큰 크기의 타입을 
	작은 크기의 타입으로 변환을 강제로 하면
	데이터가 버려질수 가 있으므로,
그러나,
임의로 이런것을 사용 해서, 
데이터를 쪼개기를 원한다면 사용한다.

또는 
int 같은 정수형 타입을 가진 연산 결과,
실수형 결과값이 나왔을때,
실수형 결과값을 사용하고 싶을 경우에	
이 방법을 사용한다.
(예 : 나누기의 결과값 )

참고:
	실수타입(float, double)은 정수타입(byte, short, int, long)으로
	자동변환은 않되는데 
	강제타입변환을 사용한다면,
	소수점 이하의 부분은 버려지고, 정수 부분만 저장된다.
  
  
4.아래의 에러가 나는 이유를 설명하고 수정 하시오.

int a = 3;
int b = 4;
	
double result = a / b;
System.out.println(result);
	a 는 int이고
	b 도 int이므로
	a/b 의 결과을 담을 메모리도 
	int로 타입으로 메모리에 잡힌다.
	
	그런데 
	cpu에서 3/4의 계산결과(0.75 실수)를  
	미리 잡힌 메모리에 넣을때
	메모리에 잡힌 것은 int 타입이므로
	메모리에 넣을때, 정수부분만( 0 만) 들어가게 된다.
	
	메모리의 값이 result에 대입 되는 것이므로
	double result 라고 선언을 했어도 전달되는 값은 0 이다.
	
	원하는 값을 얻기위해서 수정을 한다면,
	a 또는 b중 하나를 double로 변경을 하여
	a/b의 결과을 담을 메모리도 double타입의 메모리가 잡히도록
	만들면 된다 (  double result = (double)a/b; 
			or
				double resutl = a/(double)b;
        )
        
5. 이스케이프 시퀀스의 종류를 나열하고 기능을 설명하시오.

역슬래쉬가 붙는 문자 리터럴을 이스케이프 문자라고 한다. 다음 용도로 사용된다.
'\t' : 수평탭
'\n' : 줄바꿈
'\r' : 리턴

 -- 특수 문자를 표시 할때 사용 --
'\"' : 큰따옴표를 표시 하고 싶을때
'\\' : \을 표시하고 싶을때

'\u16진수' : 16진수에 해당하는 유니코드를 표현

6. 아래의 출력 결과를 확인하고, 130이 나오는 이유를 설명

	System.out.println('A'); 
	System.out.println('A' + 'A');
System.out.println('A');
은 형변환이 이루어 지지 않고 Char타입을 그대로 처리하고

System.out.println('A' + 'A');
은 + 연산을 위해 int로 형변환이 이루어져서
65 + 65 = 130의 값이 
println 로 입력된다.

7. 결합 방향과 우선순위에 대하여 설명하시오.

연산기호가 여러가 사용되었을때 우선처리 되어야 하는 것을 정의해 놓은 것이 우선순위이다.

*, /, %  처럼 같은 우선 순위를 가지는 것은  왼쪽에서 오른쪽으로 수행이 되고
ex:  100 * 2 / 3/ % 5

단항연산자( __, --, ~, ! )
부호연산자( +, - )
대입연산자( =, +=, -+, 등등)
은 오른쪽에서 왼쪽으로 연산이 된다.
ex : a = b = c = 5
	//c=5 실행, 
	//b = c 실행
	//a = b 실행
  
8. "1초과 100미만인가?"를 코딩으로 표현하면?

int num = 32;
boolean result = false;
result = ( ( 1 < num ) && ( num < 100));
System.out.println("1초과 100미만인가? : " +  result);

9. "2의 배수 또는 3의 배수?" 를 코딩으로 표현 하면?

int num = 22;
boolean result = false;
result = ((num % 2 == 0) || (num % 3 == 0));
System.out.println("2의 배수 또는 3의 배수? : " +  result);

10. 아래의 프린트 결과를 예측해 보고, 코딩 후 결과를 확인 하시오.

	class Joo {
		public static void main(String[] args) {
			int num1 = 0;
			int num2 = 0;
			boolean result;    

			result = ((num1 += 10) < 0) && ((num2 += 10) > 0);
		System.out.println("result = " + result);
		System.out.println("num1 = " + num1);
		System.out.println("num2 = " + num2 + '\\n'); // "
		
		result = ((num1 += 10) > 0) || ((num2 += 10) > 0);
		System.out.println("result = " + result);
		System.out.println("num1 = " + num1);
		System.out.println("num2 = " + num2);
		}
	}
예측 :
		result = false
		num1 = 10
		num2 = 10\n
		result = true
		num1 = 20
		num2 = 20
컴파일 오류 :
		System.out.println("num2 = " + num2 + '\\n'); // "
		을 
		System.out.println("num2 = " + num2 + "\\n"); // "
		로 바꿔줘야 함
실행 결과 :
		result = false
		num1 = 10
		num2 = 0\n
		result = true
		num1 = 20
		num2 = 0
예측과 다르게 실행결과가 num2 = 0 이 나온 이유 :
(1)
	result = ((num1 += 10) < 0) && ((num2 += 10) > 0);
	에서는 
	((num1 += 10) < 0) 
	부분을 먼저 실행했는데, FALSE 이여서,
	((num2 += 10) > 0)
	의 값과 상관없이 result 는 FALSE가 되므로
	((num2 += 10) > 0)
	부분이 실행 되지 않았다.
	
(2)
	result = ((num1 += 10) > 0) || ((num2 += 10) > 0);	
	에서는
	((num1 += 10) > 0) 
	부분이 TRUE이므로 
	((num2 += 10) > 0)
	가 TRUE이던 FALSE이던지 와 상관없이
	result가 TRUE가 되므로
	((num2 += 10) > 0)
	가 실행되지 않았다.
  
11.아래를 프로그래밍 하시오.

국어 : 50
영어 : 70
수학 : 95

총점과 평균을 구하시오.
-단 평균은 소숫점 까지 나오도록 하시오

	public class Grade{
		public static void main( String[] args){
			int kor = 50;
			int eng = 70;
			int math = 95;
			int total = kor + eng + math;
			double avg = total/(double)3;
			System.out.println("총점:" + total + ", 평균:" + avg);
		}
	}
