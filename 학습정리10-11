1. 함수는 어떻게 알아 볼수있는가?

함수명 뒤에 파라메터를 넣을수 있는 ( )//괄호 가 붙어 있다.

2. 함수 호출 하는 법은?

함수를 만든뒤, 다른 곳에서 함수명();을 사용함.

3. 함수 만드는 법은?

public static int 함수명( 파라메터, ) {
//접근여부, 메모리, 리턴값 , 함수명
}

4. 리턴 타입 void 는 어떠한 경우에 쓰는가?

리턴값이 없는 경우 사용

5. 아래를 함수로 만드시오.

starPrint2(5) 
출력
*****
 ****
  ***
   **
    *
	public static void main(String[] args) {
		
		starPrint2(5);
	}
	
	public static void starPrint2(int num) {
		for(int i=1; i<=num; i++) {
			for(int j=1; j<=5; j++) {
				if(j>=i) {
					System.out.print("*");
				}else{
					System.out.print(" ");
				}
			}
			System.out.println();
			
		}
	}
5. 아래를 함수로 만드시오.
starPrint3(5) 

출력
   
    *
   ***
  *****
 *******
*********
	public static void main(String[] args) {
		
		starPrint3(5);
	}
	
	public static void starPrint3(int row) {
		for(int i=0; i< row ; i++) {
			for(int j=1; j<=9 ; j++) {
				if( (j >= 5-i) && ( j<= 5+i )) {
					System.out.print("*");
				}else {
					System.out.print(" ");
				}
			}
			System.out.println();
		}
	
	}

6.아래의 함수를 만드시오.

char grade;
double avg = 80;

grade = getGrade(avg);

// 우 입니다.
System.out.println(grade + " 입니다.");


작성 : 
	public static void main(String[] args) {
		char grade;
		double avg = 80;
		grade = getGrade(avg);
		
		// 우 입니다.
		System.out.println(grade + " 입니다.");// 우 입니다.
		
	}

	private static char getGrade(double avg) {
		char gra = '가';
		if(avg>=90)
			gra = '수';
		else if(avg >= 80)
			gra = '우';
		else if(avg >= 70)
			gra = '미';
		else if(avg >= 80)
			gra = '양';
		else
			gra = '가';
		return gra;
	}
결과:
	우 입니다.

7.아래의 함수를 만드시오.

int sum = getHap(1,100);
//5050
System.out.println(sum);

작성:
	public static void main(String[] args) {
		int sum = getHap(1,100);
		//5050
		System.out.println(sum);
		
	}

	private static int getHap(int start, int end) {
		int sum=0;
		for(int i=start; i<=end; i++) {
			sum += i;
		}
		return sum;
	}
결과:
	5050

8.아래의 함수를 만드시오.

int count = get57(1,100);
//count 는 1부터 100 까지의 숫자중 5의 배수 이자 7의 배수인 수의 갯수
System.out.println(count );

작성 : 
	public static void main(String[] args) {
		int count = get57(1,100);
		//count 는 1부터 100 까지의 숫자중 5의 배수 이자 7의 배수인 수의 갯수
		System.out.println(count );
	}

	public static int get57(int start, int end) {
		int cnt = 0;
		for(int i=1; i<=100; i++) {
			if( (i%5==0) && (i%7 == 0)) {
				cnt ++;
			}
			
		}
		return cnt;
	}
결과:
	2

9.아래의 함수를 만드시오.

printGuGudan(3)// 3단 출력
printGuGudan(4)// 4단 출력

작성:
	public static void main(String[] args) {
		printGuGudan(3);// 3단 출력
		printGuGudan(4);// 4단 출력
	}

	private static void printGuGudan(int dan) {
		int res = 0;
		for(int i=1; i<=9; i++) {
			res = dan * i;
			System.out.println(dan + " x " + i +" = " + res);
		}
		System.out.println();
	}
결과 : 
	3 x 1 = 3
	3 x 2 = 6
	3 x 3 = 9
	3 x 4 = 12
	3 x 5 = 15
	3 x 6 = 18
	3 x 7 = 21
	3 x 8 = 24
	3 x 9 = 27

	4 x 1 = 4
	4 x 2 = 8
	4 x 3 = 12
	4 x 4 = 16
	4 x 5 = 20
	4 x 6 = 24
	4 x 7 = 28
	4 x 8 = 32
	4 x 9 = 36

10.아래의 함수를 만드시오.

getRecArea(3,5) //삼각형 넓이
getRecCirlce(5) //원넓이
getTriangleArea(4 , 5) //삼각형 넓이
작성:
	public static void main(String[] args) {
		getRecArea(3,5); //사각형 넓이
		getRecCirlce(5); //원넓이
		getTriangleArea(4 , 5); //삼각형 넓이
	}
	
	public static void getRecArea(int n1, int n2) {
		int res = n1 * n2;
		System.out.println("rec : " + res);
	}
	public static void getRecCirlce(int r) {
		final double PI = 3.14;
		double res = r * r * PI;
		System.out.println("circle : " + res);
		
	}
	public static void getTriangleArea(int n1, int n2) {
		int res = n1 * n2 /2;
		System.out.println("triangle : " + res);
	}
결과:
	rec : 15
	circle : 78.5
	triangle : 10

11. 함수로 만들면 좋은점은?

-같은 작업을(중복) 하지 않기 위해 -기능이 2번 이상 중복되면 반드시 함수로 만들것.


12.아래의 함수를 만드시오.

int month = 4;

getSeason(3)// 봄입니다. 출력
//printGuGudan(12);// 겨울 입니다. 출력
getSeason(12);// 겨울 입니다. 출력
작성:
	public static void main(String[] args) {
		int month = 4;
		getSeason(3);// 봄입니다. 출력
		getSeason(12);// 겨울 입니다. 출력
	}

	private static void getSeason(int i) {

		switch(i) {
		case 3:
		case 4:
		case 5:
		case 6:
			System.out.println("봄입니다.");
			break;
		case 7:
		case 8:
		case 9:
			System.out.println("여름입니다.");
			break;
		case 10:
		case 11:
			System.out.println("가을입니다.");
			break;
		case 12:
		case 1:
		case 2:
			System.out.println("겨울입니다.");
			break;
		default:
			break;
		}
		
	}
결과:
	봄입니다.
	겨울입니다.
