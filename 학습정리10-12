1. 변수의 스코프에 대하여 설명하시오.
- 중괄호와 중괄호 사이를 가리킨다.

2.지역변수란?
- 함수 안에 있는 변수

3.인스턴스 변수란?
- 클래스 내에 있는 변수

4. 아래의 함수를 펙토리얼로 표현하시오.
System.out.println("3 factorial: " + factorial(3));
System.out.println("3 factorial: " + factorial(12));

public static int factorial(int num) {
		if (num == 1) {
			return 1;
		} else {
			return num * factorial(num-1);
		}
	}

5.클래스의 구성요소는?
- 변수와 메소드

6.원의 넓이는 구하는 프로그램을 아래와 같이 작성하시오.
  - 원클래스를 만들것
    - 변수 radius
    - 변수 radius에 대한 setter getter 함수 만들것
    - getArea 함수
  
  -메인 메소드를 가진 다른 클래스(AreaTest)에서 원 객체를 생성할것
  
  class Circle{
	int radius;

	public void setRadius(int r) {
		radius = r;
	}
	
	public int getRadius() {
		return radius;
	}

	
	public double getArea() {
		return radius * radius * Math.PI;
	}
}


public class InstanceTest {

	public static void main(String[] args) {
		Circle circle = new Circle();
		circle.setRadius(10);
		int radius = circle.getRadius();
		double area = circle.getArea();
		System.out.println(radius);
		System.out.println(area);
	}
}



7. 객체에 대하여 설명하시오.
객체란 눈에보이는 사물(ex. 자동차, 버스 )또는 
	눈에보이지 않는 추상화된 사물(ex.강의 )
	를 상태와 동작으로 정의하여
	다른것들과 구분한 것을 말한다.
	
자바에서는  상태(속성)와 동작을  클래스안에서  필드와 메소드 로 표현하고,
	클래스 설계도에 의해서,
	메모리에 생성을 했을때 객체가 생성이 되었다고 한다.
	메모리에 생성된 객체를 인스턴스라고 부른다.

8. 아래의 클래스에 대하여, 메모리 그림을 그리시오.
class Rectangle{
	int width;
	int height;
	
	public int getArea() {
		return width * height;
	}
	
	public int getWidth() {
		return width;
	}
	public void setWidth(int width) {
		this.width = width;
	}
	public int getHeight() {
		return height;
	}
	public void setHeight(int height) {
		this.height = height;
	}
	
}
9.클래스와 객체의 차이는?
- 클래스 : .class
- 객체: .class를 메모리에 올린것


10.아래의 프로그램을 작성하시오.
-1 부터 num 까지 합을 구하는 class 를 작성하도록 하시오.

class GetSum{
	int num;
	int sum = 0;
	public void setNum(int n) {
		num = n;
	}
	
	public int sum() {
		for (int i = 1; i <= num; i++) {
			sum += i;
		}
		return sum;
	}
}
 
public class SumMain {

    public static void main(String[] args) {

        GetSum getsum = new GetSum(); //1)객체 생성
         int num; //2)num 변수 선언
         num = 50;

         getsum.setNum(num); //3)getsum 객체의 setNum함수 호출, num값 50 저장
         getsum.sum(); //4)getsum객체의 sum함수 호출, 1-50까지 합 구함

      }

}

11.아래의 프로그래밍을 작성하시오.


Gugudan gugudan = new Gugudan();
gugudan.printGugu(10); //1단부터 10단까지 출력
gugudan.printGugu(20); //1단부터 20단까지 출력


class Gugudan{
	public void printGugu(int endDan) {
		for (int i = 1; i <= endDan; i++) {
			for (int j = 1; j <= 9; j++) {
				int result = i * j;
				System.out.println(i + " * " + j + " = " + result);
			}
			System.out.println();
		}
	}
}
 
Gugudan gugudan = new Gugudan();
gugudan.printGugu(10); //1단부터 10단까지 출력
gugudan.printGugu(20); //1단부터 20단까지 출력
